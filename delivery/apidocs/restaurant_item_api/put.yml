RestaurantItemEndpoint
---
tags:
  - restaurants
put:
  parameters:
  - in: path
    name: restaurant_id
    required: true
    schema:
      type: string
    examples:
      update_restaurant_one:
        value: 1
  - in: body
    name: put_info
    required: true
    description: info to update
    schema:
      type: object
      properties:
        name:
          type: string
          description: if you want to update name
        address:
          type: string
          description: if you want to update address
        work_time:
          type: string
          description: if you want to update work time
        phone_number:
          type: string
          description: if you want to update phone number
    examples:
      "update one parameter":
        value: {"name": "Salateria"}
      "update several parameters":
        value: {"name": "Salateria", "address": "Brest"}
      "update all parameters":
        value: {"name": "Salateria", "address": "Brest", "work_time": "Monday-Friday: 9:00-21:00",
                "phone_number": "+37533123456798"}


responses:
  200:
    description: OK
    content:
      application/json:
        schema:
          type: object
          proporties:
            id: integer
            name: string
            address: string
            work_time: string
            phone_number: string
        examples:
          "updated Restaurant":
            value: {"id": 1, "name": "Salateria", "address": "Brest", "work_time": "Monday-Friday: 9:00-21:00",
                    "phone_number": "+37533123456798"}
  404:
    description: Not Found
    content:
      application/json:
        example:
          {
            "description": "Restaurant with such ID doesn't exist",
            "name": "Not Found"
          }

  400:
    description: Bad Request
    content:
      application/json:
        examples:
          "Not correct data":
            value:
              {
                "description": "Sent data not correct, doesn't match format",
                "name": "Bad request"
              }
          "No data":
            value:
              {
                "description": "Required data not available(No data)",
                "name": "Bad request"
              }
          "Not correct structure of request":
            value:
              {
                "code": 400,
                "description": "The browser (or proxy) sent a request that this server could not understand.",
                "name": "Bad Request"
              }





